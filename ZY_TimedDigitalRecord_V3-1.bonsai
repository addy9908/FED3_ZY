<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:vid="clr-namespace:Bonsai.Video;assembly=Bonsai.Video"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>Define Cam and Timer</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Index" DisplayName="Cam1" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="vid:VideoCaptureDevice">
                <vid:Index>0</vid:Index>
                <vid:Format>
                  <vid:FrameSize>
                    <vid:Width>800</vid:Width>
                    <vid:Height>600</vid:Height>
                  </vid:FrameSize>
                  <vid:AverageFrameRate>30</vid:AverageFrameRate>
                  <vid:MaximumFrameRate>30</vid:MaximumFrameRate>
                  <vid:BitCount>16</vid:BitCount>
                </vid:Format>
                <vid:CaptureProperties>
                  <vid:CameraProperty>
                    <vid:Property>Exposure</vid:Property>
                    <vid:Value>0</vid:Value>
                    <vid:ControlFlags>Manual</vid:ControlFlags>
                  </vid:CameraProperty>
                </vid:CaptureProperties>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Cam1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timestamp" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Timestamp</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Timer</Name>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Index" DisplayName="Cam2" />
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="vid:VideoCaptureDevice">
                  <vid:Index>0</vid:Index>
                  <vid:Format>
                    <vid:FrameSize>
                      <vid:Width>800</vid:Width>
                      <vid:Height>600</vid:Height>
                    </vid:FrameSize>
                    <vid:AverageFrameRate>30</vid:AverageFrameRate>
                    <vid:MaximumFrameRate>30</vid:MaximumFrameRate>
                    <vid:BitCount>16</vid:BitCount>
                  </vid:Format>
                  <vid:CaptureProperties>
                    <vid:CameraProperty>
                      <vid:Property>Exposure</vid:Property>
                      <vid:Value>0</vid:Value>
                      <vid:ControlFlags>Manual</vid:ControlFlags>
                    </vid:CameraProperty>
                  </vid:CaptureProperties>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Cam2</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Index" DisplayName="Cam3" />
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="vid:VideoCaptureDevice">
                  <vid:Index>0</vid:Index>
                  <vid:Format>
                    <vid:FrameSize>
                      <vid:Width>800</vid:Width>
                      <vid:Height>600</vid:Height>
                    </vid:FrameSize>
                    <vid:AverageFrameRate>30</vid:AverageFrameRate>
                    <vid:MaximumFrameRate>30</vid:MaximumFrameRate>
                    <vid:BitCount>16</vid:BitCount>
                  </vid:Format>
                  <vid:CaptureProperties>
                    <vid:CameraProperty>
                      <vid:Property>Exposure</vid:Property>
                      <vid:Value>0</vid:Value>
                      <vid:ControlFlags>Manual</vid:ControlFlags>
                    </vid:CameraProperty>
                  </vid:CaptureProperties>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Cam3</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Index" DisplayName="Cam4" />
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="vid:VideoCaptureDevice">
                  <vid:Index>0</vid:Index>
                  <vid:Format>
                    <vid:FrameSize>
                      <vid:Width>800</vid:Width>
                      <vid:Height>600</vid:Height>
                    </vid:FrameSize>
                    <vid:AverageFrameRate>30</vid:AverageFrameRate>
                    <vid:MaximumFrameRate>30</vid:MaximumFrameRate>
                    <vid:BitCount>16</vid:BitCount>
                  </vid:Format>
                  <vid:CaptureProperties>
                    <vid:CameraProperty>
                      <vid:Property>Exposure</vid:Property>
                      <vid:Value>0</vid:Value>
                      <vid:ControlFlags>Manual</vid:ControlFlags>
                    </vid:CameraProperty>
                  </vid:CaptureProperties>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Cam4</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Index" DisplayName="Cam5" />
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="vid:VideoCaptureDevice">
                  <vid:Index>0</vid:Index>
                  <vid:Format>
                    <vid:FrameSize>
                      <vid:Width>800</vid:Width>
                      <vid:Height>600</vid:Height>
                    </vid:FrameSize>
                    <vid:AverageFrameRate>30</vid:AverageFrameRate>
                    <vid:MaximumFrameRate>30</vid:MaximumFrameRate>
                    <vid:BitCount>16</vid:BitCount>
                  </vid:Format>
                  <vid:CaptureProperties>
                    <vid:CameraProperty>
                      <vid:Property>Exposure</vid:Property>
                      <vid:Value>0</vid:Value>
                      <vid:ControlFlags>Manual</vid:ControlFlags>
                    </vid:CameraProperty>
                  </vid:CaptureProperties>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Cam5</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Index" DisplayName="Cam6" />
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="vid:VideoCaptureDevice">
                  <vid:Index>0</vid:Index>
                  <vid:Format>
                    <vid:FrameSize>
                      <vid:Width>800</vid:Width>
                      <vid:Height>600</vid:Height>
                    </vid:FrameSize>
                    <vid:AverageFrameRate>30</vid:AverageFrameRate>
                    <vid:MaximumFrameRate>30</vid:MaximumFrameRate>
                    <vid:BitCount>16</vid:BitCount>
                  </vid:Format>
                  <vid:CaptureProperties>
                    <vid:CameraProperty>
                      <vid:Property>Exposure</vid:Property>
                      <vid:Value>0</vid:Value>
                      <vid:ControlFlags>Manual</vid:ControlFlags>
                    </vid:CameraProperty>
                  </vid:CaptureProperties>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Cam6</Name>
              </Builder>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="Base_Filename" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>FED</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>rootpath</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="vedio_len_Hr" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Multiply">
        <Operand xsi:type="IntProperty">
          <Value>108000</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>video_len</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="PortName" DisplayName="Arduino_port" />
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="ard:CreateArduino">
            <ard:Name>Arduino</ard:Name>
            <ard:PortName>COM10</ard:PortName>
            <ard:BaudRate>57600</ard:BaudRate>
            <ard:SamplingInterval>10</ard:SamplingInterval>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Timer</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="ExternalizedMapping">
          <Property Name="Start" DisplayName="SessionStart" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="GroupWorkflow">
          <Name>SessionStart</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="WorkflowInput">
                <Name>Source1</Name>
              </Expression>
              <Expression xsi:type="MemberSelector">
                <Selector>TimeOfDay</Selector>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="Value" DisplayName="Start" />
              </Expression>
              <Expression xsi:type="GreaterThan">
                <Operand xsi:type="TimeSpanProperty">
                  <Value>PT17H</Value>
                </Operand>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="3" Label="Source1" />
              <Edge From="2" To="3" Label="Source2" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>1</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="ExternalizedMapping">
          <Property Name="End" DisplayName="SessionEnd" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>SaveUntil</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="GroupWorkflow">
                <Name>SavePelletCOunt</Name>
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED1" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>COM10</ard:PortName>
                        <ard:Pin>2</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED1.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED1_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED2" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>COM10</ard:PortName>
                        <ard:Pin>3</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED2.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED2_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED3" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>COM10</ard:PortName>
                        <ard:Pin>4</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED3.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED3_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED4" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>COM10</ard:PortName>
                        <ard:Pin>5</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED4.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED4_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED5" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>6</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED5.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED5_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED6" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>7</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED6.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED6_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED7" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>8</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED7.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED7_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED8" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>9</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED8.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED8_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED9" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>10</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED9.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED9_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED10" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>11</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED10.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED10_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED11" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>12</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED11.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED11_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                    <Expression xsi:type="ExternalizedMapping">
                      <Property Name="Pin" DisplayName="FED12" />
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="ard:DigitalInput">
                        <ard:PortName>Arduino</ard:PortName>
                        <ard:Pin>13</ard:Pin>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>PelletCount</Name>
                      <Description>Count the pellet taken</Description>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>EventCount</ipy:Name>
                            <ipy:Script>count = 0

@returns(int)
def process(value):
  global count
  if value:
    count=count+1
  
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Timestamp" />
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Timestamp.TimeOfDay.TotalMilliseconds</Selector>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>Event</ipy:Name>
                            <ipy:Description>check event based on pulse duration</ipy:Description>
                            <ipy:Script>event = ''
startTime = 0
duration = 0

@returns(str)
def process(value):
  global startTime,duration
  event = ''
  if value.Value:
    startTime = value.Timestamp.TimeOfDay.TotalMilliseconds

  else:
    duration = value.Timestamp.TimeOfDay.TotalMilliseconds - startTime

    if duration&gt; 190 and duration&lt;210:
      event='pellet'
    elif duration&gt; 90 and duration&lt;190:
      event='start'
  
  return event</ipy:Script>
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>PelletCount</ipy:Name>
                            <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value == "pellet":
    count=count+1
  return count</ipy:Script>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Expression>new(
Item2 as TimeOfDay,
Item3 as MilliSecond,
Item1 as EventCount,
Item4 as PelletCount,
Item5 as Event
)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="7" Label="Source1" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="7" Label="Source2" />
                          <Edge From="4" To="7" Label="Source3" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="5" To="7" Label="Source5" />
                          <Edge From="6" To="7" Label="Source4" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>rootpath</Name>
                    </Expression>
                    <Expression xsi:type="Format">
                      <Format>{0}_FED12.csv</Format>
                      <Selector>it</Selector>
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="io:CsvWriter">
                      <io:FileName>test\ZY_FED12_.csv</io:FileName>
                      <io:Append>false</io:Append>
                      <io:Overwrite>false</io:Overwrite>
                      <io:Suffix>Timestamp</io:Suffix>
                      <io:IncludeHeader>true</io:IncludeHeader>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>PelletCount</Selector>
                    </Expression>
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                    <Edge From="1" To="2" Label="Source1" />
                    <Edge From="2" To="6" Label="Source1" />
                    <Edge From="3" To="4" Label="Source1" />
                    <Edge From="4" To="5" Label="Source1" />
                    <Edge From="5" To="6" Label="Source2" />
                    <Edge From="6" To="7" Label="Source1" />
                    <Edge From="8" To="9" Label="Source1" />
                    <Edge From="9" To="10" Label="Source1" />
                    <Edge From="10" To="14" Label="Source1" />
                    <Edge From="11" To="12" Label="Source1" />
                    <Edge From="12" To="13" Label="Source1" />
                    <Edge From="13" To="14" Label="Source2" />
                    <Edge From="14" To="15" Label="Source1" />
                    <Edge From="16" To="17" Label="Source1" />
                    <Edge From="17" To="18" Label="Source1" />
                    <Edge From="18" To="22" Label="Source1" />
                    <Edge From="19" To="20" Label="Source1" />
                    <Edge From="20" To="21" Label="Source1" />
                    <Edge From="21" To="22" Label="Source2" />
                    <Edge From="22" To="23" Label="Source1" />
                    <Edge From="24" To="25" Label="Source1" />
                    <Edge From="25" To="26" Label="Source1" />
                    <Edge From="26" To="30" Label="Source1" />
                    <Edge From="27" To="28" Label="Source1" />
                    <Edge From="28" To="29" Label="Source1" />
                    <Edge From="29" To="30" Label="Source2" />
                    <Edge From="30" To="31" Label="Source1" />
                    <Edge From="32" To="33" Label="Source1" />
                    <Edge From="33" To="34" Label="Source1" />
                    <Edge From="34" To="38" Label="Source1" />
                    <Edge From="35" To="36" Label="Source1" />
                    <Edge From="36" To="37" Label="Source1" />
                    <Edge From="37" To="38" Label="Source2" />
                    <Edge From="38" To="39" Label="Source1" />
                    <Edge From="40" To="41" Label="Source1" />
                    <Edge From="41" To="42" Label="Source1" />
                    <Edge From="42" To="46" Label="Source1" />
                    <Edge From="43" To="44" Label="Source1" />
                    <Edge From="44" To="45" Label="Source1" />
                    <Edge From="45" To="46" Label="Source2" />
                    <Edge From="46" To="47" Label="Source1" />
                    <Edge From="48" To="49" Label="Source1" />
                    <Edge From="49" To="50" Label="Source1" />
                    <Edge From="50" To="54" Label="Source1" />
                    <Edge From="51" To="52" Label="Source1" />
                    <Edge From="52" To="53" Label="Source1" />
                    <Edge From="53" To="54" Label="Source2" />
                    <Edge From="54" To="55" Label="Source1" />
                    <Edge From="56" To="57" Label="Source1" />
                    <Edge From="57" To="58" Label="Source1" />
                    <Edge From="58" To="62" Label="Source1" />
                    <Edge From="59" To="60" Label="Source1" />
                    <Edge From="60" To="61" Label="Source1" />
                    <Edge From="61" To="62" Label="Source2" />
                    <Edge From="62" To="63" Label="Source1" />
                    <Edge From="64" To="65" Label="Source1" />
                    <Edge From="65" To="66" Label="Source1" />
                    <Edge From="66" To="70" Label="Source1" />
                    <Edge From="67" To="68" Label="Source1" />
                    <Edge From="68" To="69" Label="Source1" />
                    <Edge From="69" To="70" Label="Source2" />
                    <Edge From="70" To="71" Label="Source1" />
                    <Edge From="72" To="73" Label="Source1" />
                    <Edge From="73" To="74" Label="Source1" />
                    <Edge From="74" To="78" Label="Source1" />
                    <Edge From="75" To="76" Label="Source1" />
                    <Edge From="76" To="77" Label="Source1" />
                    <Edge From="77" To="78" Label="Source2" />
                    <Edge From="78" To="79" Label="Source1" />
                    <Edge From="80" To="81" Label="Source1" />
                    <Edge From="81" To="82" Label="Source1" />
                    <Edge From="82" To="86" Label="Source1" />
                    <Edge From="83" To="84" Label="Source1" />
                    <Edge From="84" To="85" Label="Source1" />
                    <Edge From="85" To="86" Label="Source2" />
                    <Edge From="86" To="87" Label="Source1" />
                    <Edge From="88" To="89" Label="Source1" />
                    <Edge From="89" To="90" Label="Source1" />
                    <Edge From="90" To="94" Label="Source1" />
                    <Edge From="91" To="92" Label="Source1" />
                    <Edge From="92" To="93" Label="Source1" />
                    <Edge From="93" To="94" Label="Source2" />
                    <Edge From="94" To="95" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="SubscribeSubject">
                <Name>Timer</Name>
              </Expression>
              <Expression xsi:type="MemberSelector">
                <Selector>TimeOfDay</Selector>
              </Expression>
              <Expression xsi:type="GroupWorkflow">
                <Name>NextDay</Name>
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>TimeOfDay</Selector>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="rx:Skip">
                        <rx:Count>1</rx:Count>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="rx:Zip" />
                    </Expression>
                    <Expression xsi:type="LessThan" />
                    <Expression xsi:type="rx:Condition">
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                    <Edge From="1" To="2" Label="Source1" />
                    <Edge From="1" To="3" Label="Source2" />
                    <Edge From="2" To="3" Label="Source1" />
                    <Edge From="3" To="4" Label="Source1" />
                    <Edge From="4" To="5" Label="Source1" />
                    <Edge From="5" To="6" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Take">
                  <rx:Count>1</rx:Count>
                </Combinator>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:SkipUntil" />
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="Value" DisplayName="End" />
              </Expression>
              <Expression xsi:type="GreaterThan">
                <Operand xsi:type="TimeSpanProperty">
                  <Value>PT13H</Value>
                </Operand>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Take">
                  <rx:Count>1</rx:Count>
                </Combinator>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="1" To="3" Label="Source1" />
              <Edge From="2" To="5" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source2" />
              <Edge From="5" To="7" Label="Source1" />
              <Edge From="6" To="7" Label="Source2" />
              <Edge From="7" To="8" Label="Source1" />
              <Edge From="8" To="9" Label="Source1" />
              <Edge From="9" To="10" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Delay">
            <rx:DueTime>PT2S</rx:DueTime>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>A1_out</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="BooleanProperty">
                  <Value>false</Value>
                </Combinator>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="ard:DigitalOutput">
                  <ard:PortName>COM10</ard:PortName>
                  <ard:Pin>15</ard:Pin>
                </Combinator>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="DueTime" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Delay">
                  <rx:DueTime>PT2S</rx:DueTime>
                </Combinator>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="BooleanProperty">
                  <Value>true</Value>
                </Combinator>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="ard:DigitalOutput">
                  <ard:PortName>COM10</ard:PortName>
                  <ard:Pin>15</ard:Pin>
                </Combinator>
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="3" Label="Source1" />
              <Edge From="2" To="3" Label="Source2" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Cam1</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timestamp" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>wheel_Count_L</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CropPolygon">
                <cv:Regions>
                  <cv:ArrayOfPoint>
                    <cv:Point>
                      <cv:X>630</cv:X>
                      <cv:Y>194</cv:Y>
                    </cv:Point>
                    <cv:Point>
                      <cv:X>675</cv:X>
                      <cv:Y>194</cv:Y>
                    </cv:Point>
                    <cv:Point>
                      <cv:X>675</cv:X>
                      <cv:Y>273</cv:Y>
                    </cv:Point>
                    <cv:Point>
                      <cv:X>630</cv:X>
                      <cv:Y>273</cv:Y>
                    </cv:Point>
                  </cv:ArrayOfPoint>
                </cv:Regions>
                <cv:MaskType>ToZero</cv:MaskType>
                <cv:FillValue>
                  <cv:Val0>0</cv:Val0>
                  <cv:Val1>0</cv:Val1>
                  <cv:Val2>0</cv:Val2>
                  <cv:Val3>0</cv:Val3>
                </cv:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Grayscale" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Threshold">
                <cv:ThresholdValue>128</cv:ThresholdValue>
                <cv:MaxValue>255</cv:MaxValue>
                <cv:ThresholdType>Binary</cv:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dsp:Average" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Val0</Selector>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>128</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  if value:
    count +=1  
  return count</ipy:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>wheel_Count_R</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:CropPolygon">
                <cv:MaskType>ToZero</cv:MaskType>
                <cv:FillValue>
                  <cv:Val0>0</cv:Val0>
                  <cv:Val1>0</cv:Val1>
                  <cv:Val2>0</cv:Val2>
                  <cv:Val3>0</cv:Val3>
                </cv:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Grayscale" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="cv:Threshold">
                <cv:ThresholdValue>128</cv:ThresholdValue>
                <cv:MaxValue>255</cv:MaxValue>
                <cv:ThresholdType>Binary</cv:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dsp:Average" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Val0</Selector>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>128</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Script>count = 0
@returns(int)
def process(value):
  global count
  count +=1  
  return count</ipy:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>rootpath</Name>
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}_Cam1.csv</Format>
        <Selector>it</Selector>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="io:CsvWriter">
          <io:FileName>FED_Cam1.csv</io:FileName>
          <io:Append>false</io:Append>
          <io:Overwrite>false</io:Overwrite>
          <io:Suffix>Timestamp</io:Suffix>
          <io:IncludeHeader>true</io:IncludeHeader>
          <io:Selector>Item1.Timestamp, Item1.Timestamp.TimeOfDay.TotalMilliseconds, Item2</io:Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MemberSelector">
          <Selector>Item1.Value</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>rootpath</Name>
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}_Cam1.avi</Format>
        <Selector>it</Selector>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>FED_Cam1.avi</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>video_len</Name>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="Count" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>108000</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Cam2</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timestamp" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam2.csv</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="io:CsvWriter">
          <io:FileName>test_data.csv</io:FileName>
          <io:Append>false</io:Append>
          <io:Overwrite>false</io:Overwrite>
          <io:Suffix>Timestamp</io:Suffix>
          <io:IncludeHeader>true</io:IncludeHeader>
          <io:Selector>Timestamp, Timestamp.TimeOfDay.TotalMilliseconds</io:Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MemberSelector">
          <Selector>Value</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam2.avi</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>test_video.avi</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>video_len</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Count" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>108000</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Cam3</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timestamp" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam3.csv</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="io:CsvWriter">
          <io:FileName>test_data.csv</io:FileName>
          <io:Append>false</io:Append>
          <io:Overwrite>false</io:Overwrite>
          <io:Suffix>Timestamp</io:Suffix>
          <io:IncludeHeader>true</io:IncludeHeader>
          <io:Selector>Timestamp, Timestamp.TimeOfDay.TotalMilliseconds</io:Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MemberSelector">
          <Selector>Value</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam3.avi</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>test_video.avi</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>video_len</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Count" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>108000</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Cam4</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timestamp" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam4.csv</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="io:CsvWriter">
          <io:FileName>test_data.csv</io:FileName>
          <io:Append>false</io:Append>
          <io:Overwrite>false</io:Overwrite>
          <io:Suffix>Timestamp</io:Suffix>
          <io:IncludeHeader>true</io:IncludeHeader>
          <io:Selector>Timestamp, Timestamp.TimeOfDay.TotalMilliseconds</io:Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MemberSelector">
          <Selector>Value</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam4.avi</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>test_video.avi</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>video_len</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Count" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>108000</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Cam5</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timestamp" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam5.csv</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="io:CsvWriter">
          <io:FileName>test_data.csv</io:FileName>
          <io:Append>false</io:Append>
          <io:Overwrite>false</io:Overwrite>
          <io:Suffix>Timestamp</io:Suffix>
          <io:IncludeHeader>true</io:IncludeHeader>
          <io:Selector>Timestamp, Timestamp.TimeOfDay.TotalMilliseconds</io:Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MemberSelector">
          <Selector>Value</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam5.avi</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>test_video.avi</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>video_len</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Count" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>108000</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Cam6</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timestamp" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam6.csv</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="io:CsvWriter">
          <io:FileName>test_data.csv</io:FileName>
          <io:Append>false</io:Append>
          <io:Overwrite>false</io:Overwrite>
          <io:Suffix>Timestamp</io:Suffix>
          <io:IncludeHeader>true</io:IncludeHeader>
          <io:Selector>Timestamp, Timestamp.TimeOfDay.TotalMilliseconds</io:Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="MemberSelector">
          <Selector>Value</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>rootpath</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Format">
          <Format>{0}_Cam6.avi</Format>
          <Selector>it</Selector>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="FileName" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>test_video.avi</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>video_len</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Count" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Take">
            <rx:Count>108000</rx:Count>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Repeat" />
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="10" To="12" Label="Source1" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="15" Label="Source1" />
      <Edge From="13" To="17" Label="Source1" />
      <Edge From="14" To="15" Label="Source2" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="19" To="21" Label="Source1" />
      <Edge From="19" To="22" Label="Source1" />
      <Edge From="20" To="23" Label="Source1" />
      <Edge From="21" To="23" Label="Source2" />
      <Edge From="22" To="23" Label="Source3" />
      <Edge From="23" To="27" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="25" To="26" Label="Source1" />
      <Edge From="26" To="27" Label="Source2" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="28" To="32" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="31" Label="Source1" />
      <Edge From="31" To="32" Label="Source2" />
      <Edge From="32" To="35" Label="Source1" />
      <Edge From="33" To="34" Label="Source1" />
      <Edge From="34" To="35" Label="Source2" />
      <Edge From="35" To="36" Label="Source1" />
      <Edge From="37" To="38" Label="Source1" />
      <Edge From="38" To="42" Label="Source1" />
      <Edge From="39" To="40" Label="Source1" />
      <Edge From="40" To="41" Label="Source1" />
      <Edge From="41" To="42" Label="Source2" />
      <Edge From="42" To="43" Label="Source1" />
      <Edge From="43" To="47" Label="Source1" />
      <Edge From="44" To="45" Label="Source1" />
      <Edge From="45" To="46" Label="Source1" />
      <Edge From="46" To="47" Label="Source2" />
      <Edge From="47" To="50" Label="Source1" />
      <Edge From="48" To="49" Label="Source1" />
      <Edge From="49" To="50" Label="Source2" />
      <Edge From="50" To="51" Label="Source1" />
      <Edge From="52" To="53" Label="Source1" />
      <Edge From="53" To="57" Label="Source1" />
      <Edge From="54" To="55" Label="Source1" />
      <Edge From="55" To="56" Label="Source1" />
      <Edge From="56" To="57" Label="Source2" />
      <Edge From="57" To="58" Label="Source1" />
      <Edge From="58" To="62" Label="Source1" />
      <Edge From="59" To="60" Label="Source1" />
      <Edge From="60" To="61" Label="Source1" />
      <Edge From="61" To="62" Label="Source2" />
      <Edge From="62" To="65" Label="Source1" />
      <Edge From="63" To="64" Label="Source1" />
      <Edge From="64" To="65" Label="Source2" />
      <Edge From="65" To="66" Label="Source1" />
      <Edge From="67" To="68" Label="Source1" />
      <Edge From="68" To="72" Label="Source1" />
      <Edge From="69" To="70" Label="Source1" />
      <Edge From="70" To="71" Label="Source1" />
      <Edge From="71" To="72" Label="Source2" />
      <Edge From="72" To="73" Label="Source1" />
      <Edge From="73" To="77" Label="Source1" />
      <Edge From="74" To="75" Label="Source1" />
      <Edge From="75" To="76" Label="Source1" />
      <Edge From="76" To="77" Label="Source2" />
      <Edge From="77" To="80" Label="Source1" />
      <Edge From="78" To="79" Label="Source1" />
      <Edge From="79" To="80" Label="Source2" />
      <Edge From="80" To="81" Label="Source1" />
      <Edge From="82" To="83" Label="Source1" />
      <Edge From="83" To="87" Label="Source1" />
      <Edge From="84" To="85" Label="Source1" />
      <Edge From="85" To="86" Label="Source1" />
      <Edge From="86" To="87" Label="Source2" />
      <Edge From="87" To="88" Label="Source1" />
      <Edge From="88" To="92" Label="Source1" />
      <Edge From="89" To="90" Label="Source1" />
      <Edge From="90" To="91" Label="Source1" />
      <Edge From="91" To="92" Label="Source2" />
      <Edge From="92" To="95" Label="Source1" />
      <Edge From="93" To="94" Label="Source1" />
      <Edge From="94" To="95" Label="Source2" />
      <Edge From="95" To="96" Label="Source1" />
      <Edge From="97" To="98" Label="Source1" />
      <Edge From="98" To="102" Label="Source1" />
      <Edge From="99" To="100" Label="Source1" />
      <Edge From="100" To="101" Label="Source1" />
      <Edge From="101" To="102" Label="Source2" />
      <Edge From="102" To="103" Label="Source1" />
      <Edge From="103" To="107" Label="Source1" />
      <Edge From="104" To="105" Label="Source1" />
      <Edge From="105" To="106" Label="Source1" />
      <Edge From="106" To="107" Label="Source2" />
      <Edge From="107" To="110" Label="Source1" />
      <Edge From="108" To="109" Label="Source1" />
      <Edge From="109" To="110" Label="Source2" />
      <Edge From="110" To="111" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>